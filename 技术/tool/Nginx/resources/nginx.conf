
#user  nobody;                                                  # 用户权限
worker_processes  1;                                            # 工作进程数量

#error_log  logs/error.log;                                     # 不同级别的日志
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;                                     # 进程文件


events {                                                        # 配置事件驱动，可选择不同的模式
    worker_connections  1024;                                   # 最大连接数
}


http {                                                          # 开始干活了..主要功能都在里面
    include       mime.types;                                       # 引用外部文件,处理数据类型
    default_type  application/octet-stream;                         # 默认文件类型
                                                                    # 日志格式
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;                             # 日志，访问记录
                                                                    # 下面两项是性能优化，针对操作系统，
    sendfile        on;                                             # 
    #tcp_nopush     on;                                             # 

    #keepalive_timeout  0;                                          # 超时
    keepalive_timeout  65;

    #gzip  on;                                                      # 启用gzip压缩

    server {                                                        # 服务节点
        listen       80;                                                # 监听端口
        server_name  localhost;                                         # 虚拟主机 外界访问地址，可以是域名

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {                                                    # 内部?
            root   html;                                                # 根目录 
            index  index.html index.htm;                                # 首页
        }

        #error_page  404              /404.html;                        # 404时

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;                        # 50x时
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80     # 代理示例
        #
        #location ~ \.php$ {                                            # 处理php请求
        #    proxy_pass   http://127.0.0.1;                             # 由 http://127.0.0.1 处理
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server                                             # HTTPS server 示例
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
